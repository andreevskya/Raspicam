/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative */

#ifndef _Included_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
#define _Included_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    open
 * Signature: ()Lru/andreevskya/raspberrypi/raspicam/Status;
 */
JNIEXPORT jobject JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_open__
  (JNIEnv *, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    open
 * Signature: (II)Lru/andreevskya/raspberrypi/raspicam/Status;
 */
JNIEXPORT jobject JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_open__II
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    takeSnapshot
 * Signature: (Ljava/lang/String;)Lru/andreevskya/raspberrypi/raspicam/Status;
 */
JNIEXPORT jobject JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_takeSnapshot
  (JNIEnv *, jobject, jstring);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    close
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_close
  (JNIEnv *, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    setSaturation
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_setSaturation
  (JNIEnv *, jobject, jint);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    getSaturation
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_getSaturation
  (JNIEnv *, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    setExposureCompensation
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_setExposureCompensation
  (JNIEnv *, jobject, jint);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    getExposureCompensation
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_getExposureCompensation
  (JNIEnv *, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    setSharpness
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_setSharpness
  (JNIEnv *, jobject, jint);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    getSharpness
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_getSharpness
  (JNIEnv *, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    setContrast
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_setContrast
  (JNIEnv *, jobject, jint);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    getContrast
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_getContrast
  (JNIEnv *, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    setBrightness
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_setBrightness
  (JNIEnv *, jobject, jint);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    getBrightness
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_getBrightness
  (JNIEnv *, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    setShutterSpeed
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_setShutterSpeed
  (JNIEnv *, jobject, jint);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    getShutterSpeed
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_getShutterSpeed
  (JNIEnv *, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    setRotation
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_setRotation
  (JNIEnv *, jobject, jint);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    getRotation
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_getRotation
  (JNIEnv *, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    setFlip
 * Signature: (ZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_setFlip
  (JNIEnv *, jobject, jboolean, jboolean);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    getFlip
 * Signature: ()Lru/andreevskya/raspberrypi/raspicam/Flip;
 */
JNIEXPORT jobject JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_getFlip
  (JNIEnv *, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    setRoi
 * Signature: (FFFF)Z
 */
JNIEXPORT jboolean JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_setRoi
  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    getRoi
 * Signature: ()Lru/andreevskya/raspberrypi/raspicam/RectangleF;
 */
JNIEXPORT jobject JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_getRoi
  (JNIEnv *, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    setExposureMode
 * Signature: (Lru/andreevskya/raspberrypi/raspicam/ExposureMode;)Z
 */
JNIEXPORT jboolean JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_setExposureMode
  (JNIEnv *, jobject, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    getExposureMode
 * Signature: ()Lru/andreevskya/raspberrypi/raspicam/ExposureMode;
 */
JNIEXPORT jobject JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_getExposureMode
  (JNIEnv *, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    setExposureMeteringMode
 * Signature: (Lru/andreevskya/raspberrypi/raspicam/ExposureMeteringMode;)Z
 */
JNIEXPORT jboolean JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_setExposureMeteringMode
  (JNIEnv *, jobject, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    getExposureMeteringMode
 * Signature: ()Lru/andreevskya/raspberrypi/raspicam/ExposureMeteringMode;
 */
JNIEXPORT jobject JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_getExposureMeteringMode
  (JNIEnv *, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    setAutoWhiteBalance
 * Signature: (Lru/andreevskya/raspberrypi/raspicam/AutoWhiteBalance;)Z
 */
JNIEXPORT jboolean JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_setAutoWhiteBalance
  (JNIEnv *, jobject, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    getAutoWhiteBalance
 * Signature: ()Lru/andreevskya/raspberrypi/raspicam/AutoWhiteBalance;
 */
JNIEXPORT jobject JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_getAutoWhiteBalance
  (JNIEnv *, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    setImageEffect
 * Signature: (Lru/andreevskya/raspberrypi/raspicam/ImageEffect;)Z
 */
JNIEXPORT jboolean JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_setImageEffect
  (JNIEnv *, jobject, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    getImageEffect
 * Signature: ()Lru/andreevskya/raspberrypi/raspicam/ImageEffect;
 */
JNIEXPORT jobject JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_getImageEffect
  (JNIEnv *, jobject);

/*
 * Class:     ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative
 * Method:    reset
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_ru_andreevskya_raspberrypi_raspicam_RaspberryPiCameraNative_reset
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
